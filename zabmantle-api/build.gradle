plugins {
  id 'java'
  id 'org.springframework.boot' version '3.0.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'jacoco'
}

group = 'net.timbel'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'

  if (System.getProperty('os.name').contains('Mac')) {
    compileOnly 'io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64'
  }
}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.named('build') {
  finalizedBy(jacocoTestReport)
}

jacocoTestReport {
  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, excludes: [
        "**/*Application.class",
        "**/*WebClient.class",
        "**/config/*"
      ])
    })
    )
  }

  finalizedBy(jacocoTestCoverageVerification)
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      element = 'CLASS'
      limit {
        minimum = 0.99
      }
      excludes = [
        "*.*Application",
        "*.*WebClient",
        "*.config.*"
      ]
    }
  }
}
